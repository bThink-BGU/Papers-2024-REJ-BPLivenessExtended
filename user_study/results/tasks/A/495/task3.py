# -*- coding: utf-8 -*-
"""task3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i05U7S9LuriwTXAsHRCavGFZEMFk3dm5
"""

# Don't touch this b-thread
@thread
def bt_1():
    for i in range(5):
        yield {waitFor: [Up, Down, Left, Right]}
    yield {block: [Up, Down, Left, Right]}

# Enter your solution below

#block the movement to walls
@thread
def bt_2():
    e = At11
    while True:
        if e == At11:
            e = yield {waitFor: AnyAt, block: [Up, Left]}
        elif e == At12:
            e = yield {waitFor: AnyAt, block: [Down, Up]}
        elif e==At13:
            e = yield {waitFor: AnyAt, block: [Right, Up]}
        elif e==At21:
            e = yield {waitFor: AnyAt, block: [Right, Left]}
        elif e==At31:
            e = yield {waitFor: AnyAt, block: [Left, Down]}
        elif e==At32:
            e = yield {waitFor: AnyAt, block: [Down, Up]}
        elif e==At33:
            e = yield {waitFor: AnyAt, block: [Down, Right]}
        else:
            e = yield {waitFor: AnyAt}

@thread
def bt_3():
  while True:
    yield {request: [Up, Down, Left, Right]}


#the path that starts with down step
@thread
def bt_4():
  yield {waitFor: At11, block: [Up, Left]}
  yield {waitFor: At21, block: [Left, Right]}
  yield {waitFor: At31, block: [Up, Left, Down]}
  yield {waitFor: At32, block: [Up, Left, Down]}
  yield {waitFor: At33, block: [Down, Left, Right]}

@thread
def bt_6():
  yield {waitFor: At11, block: [ Up, Left]}
  yield {waitFor: At12, block: [Up, Down]}
  yield {waitFor: At13, block: [Up,Right]}
  yield {waitFor: At32, block: [Down, Right, Left]}
  yield {waitFor: At13, block: [ Up, Left, Right]}

A