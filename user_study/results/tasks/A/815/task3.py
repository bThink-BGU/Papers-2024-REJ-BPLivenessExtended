# -*- coding: utf-8 -*-
"""task3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i05U7S9LuriwTXAsHRCavGFZEMFk3dm5
"""

# Don't touch this b-thread
@thread
def bt_1():
    for i in range(5):
        yield {waitFor: [Up, Down, Left, Right]}
    yield {block: [Up, Down, Left, Right]}

# Enter your solution below
def bt_2():
    e = At11
    while True:
        if e in [At11,At13]:
            if e == At13:
                e = yield{waitFor: AnyAt, block: [Up,Right]}
            else:
                e = yield{waitFor: AnyAt, block: [Up,Left]}
        elif e in [At21, At23]:
            e = yield{waitFor: AnyAt, block: [Left,Right]}
        elif e in [At31,At33]:
            if e == At33:
                e = yield{waitFor: AnyAt, block: [Down,Right]}
            else:
                e = yield{waitFor: AnyAt, block: [Down,Left]}
        elif e in [At12,At32]:
            e = yield{waitFor: AnyAt, block: [Down,Up]}
#above is the code that protects clashing with the walls

def bt_3():
  for i in range(5):
    yield{request: [Left,Right,Down,Up]}
#runs 5 movement requests

def bt_4():
    yield{waitFor: At12}
    yield{request: Right,block: [Left,Up,Down]}
    yield{request: Down, block: [Left,Up,Right]}
    yield{request: Down, block: [Left,Up,Right]}
    yield{request: Left, block: [Right,Up,Down]}
#if on the first command you move to At12 there is only 1 way to get to At32 in the remaining 4 moves so we force it.

def bt_5():
    yield{waitFor: At21}
    e = yield{waitFor: AnyAt}
    if e == At11:
        yield{request: Down, block: [Left,Up,Right]}
        yield{request: Down, block: [Left,Up,Right]}
        yield{request: Right,block: [Left,Up,Down]}

    e = yield{waitFor: AnyAt}
    if e == At21:
        yield{request: Down, block: [Left,Up,Right]}
        yield{request: Right,block: [Left,Up,Down]}

    e = yield{waitFor: AnyAt}
    if e == At33:
        yield{request: Left ,block: [Right,Up,Down]}
    if e == At31:
        yield{request: Right,block: [Left,Up,Down]}