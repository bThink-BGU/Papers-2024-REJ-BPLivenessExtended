# -*- coding: utf-8 -*-
"""task4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xr0ykmflWmrE8LU7N72vjRC_AkZ90BNY
"""

# Don't touch this b-thread
@thread
def bt_1():
    while True:
        yield {request: [Up, Down, Left, Right]}

# Enter your solution below
@thread
def bt_2():
    visited_r = False
    visited_b = False

    while True:
        # Wait for the position update
        location = yield {waitFor: AnyAt}

        if location == At33:
            # Mark that we have visited R
            visited_r = True
        elif location == At31:
            # Mark that we have visited B
            visited_b = True

        # Check if the robot has visited R and not B yet
        if visited_r and not visited_b:
            # Request to visit B before visiting R again
            yield {block: [Up, Down, Left, Right]}  # Block all moves until we visit (3,1)
        elif visited_r and visited_b:
            # Allow moves again after visiting B
            yield {request: [Up, Down, Left, Right]}
            # Reset visited status
            visited_r = False
            visited_b = False
        else:
            # Allow normal moves if conditions are not met
            yield {request: [Up, Down, Left, Right]}