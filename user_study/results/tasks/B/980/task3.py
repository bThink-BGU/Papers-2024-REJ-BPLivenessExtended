# -*- coding: utf-8 -*-
"""task3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1i05U7S9LuriwTXAsHRCavGFZEMFk3dm5
"""

# Don't touch this b-thread
@thread
def bt_1():
    for i in range(5):
        yield {waitFor: [Up, Down, Left, Right]}
    yield {block: [Up, Down, Left, Right]}

# Enter your solution below

# Wall Blocking B-threads
@thread
def bt_2():
      e = At11
      while True:
          if e == At12 or  e == At13 or e==At11:
              e = yield {waitFor: AnyAt, block: Up}
          elif e == At31 or e==At32 or e==At33:
              e = yield {waitFor: AnyAt, block: Down}
          else:
              e = yield {waitFor: AnyAt}
@thread
def bt_3():
      e = At11
      while True:
          if e == At21 or  e == At31 or e==At11:
              e = yield {waitFor: AnyAt, block: Left}
          elif e == At13 or e==At23 or e==At33:
              e = yield {waitFor: AnyAt, block: Right}
          else:
              e = yield {waitFor: AnyAt}

# Moving B-threads

@thread
def bt_4():
  stepCount = 0
  e = At11
  yield {request: [Right, Down]}
  while True:
    if e == At21:
      stepcount = stepcount + 1
      e =yield {request: [up, Down]}
    elif e == At31:
      yield {request: Right}
      yield {request: Right}
      yield {request: up}
    elif e == At11:
      if stepcount > 0:
        yield {request: Right}
        yield {request: Right}
        yield {request: Down}
      else:
        stepcount = stepcount + 1
        e =yield {request: [Right, Down]}
    elif e == At12:
      if stepcount > 1:
        yield {request: Right}
        yield {request: Down}
      else:
        stepcount = stepcount + 1
        e =yield {request: [Right, Left]}
    elif e == At13:
      if stepcount > 2:
        yield {request: Down}
      else:
        stepcount = stepcount + 1
        e =yield {request: [Down, Left]}
    elif e == At23:
      yield {request: Down}
      yield {request: Up}
    else:
      e = yield {waitFor: AnyAt}