# -*- coding: utf-8 -*-
"""task2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cU6_kbhswbYJbN_RYiga8-D5X-S2MD2O
"""

# Don't touch this b-thread
@thread
def bt_1():
    for i in range(5):
        yield {request: [Up, Down, Left, Right]}

# Enter your solution below
@thread
def bt_2():
    e = At11
    while True:
        # block movement to upper bound
        if e in [At11, At13]:
            e = yield {waitFor: AnyAt, block: Up}
        # block movement to (2,2)
        elif e == At12:
            e = yield {waitFor: AnyAt, block: [Up, Down]}
        else:
            e = yield {waitFor: AnyAt}

@thread
def bt_3():
    e = At11
    while True:
        # block movement to lower bound
        if e in [At31, At33]:
            e = yield {waitFor: AnyAt, block: Down}
        # block movement to (2,2)
        elif e == At32:
            e = yield {waitFor: AnyAt, block: [Up, Down]}
        else:
            e = yield {waitFor: AnyAt}

@thread
def bt_4():
    e = At11
    while True:
        # block movement to left bound
        if e in [At11, At31]:
            e = yield {waitFor: AnyAt, block: Left}
        # block movement to (2,2)
        elif e == At21:
            e = yield {waitFor: AnyAt, block: [Left, Right]}
        else:
            e = yield {waitFor: AnyAt}

@thread
def bt_5():
    e = At11
    while True:
        # block movement to right bound
        if e in [At13, At33]:
            e = yield {waitFor: AnyAt, block: Right}
        # block movement to (2,2)
        elif e == At23:
            e = yield {waitFor: AnyAt, block: [Left, Right]}
        else:
            e = yield {waitFor: AnyAt}